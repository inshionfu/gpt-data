<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kojikoji.gpt.data.infrastructure.dao.IOrderDao">

    <resultMap id="orderMap" type="com.kojikoji.gpt.data.infrastructure.po.OrderPO">
        <id column="id" property="id"/>
        <result column="openid" property="openid"/>
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_quota" property="productQuota"/>
        <result column="order_id" property="orderId"/>
        <result column="order_time" property="orderTime"/>
        <result column="order_status" property="orderStatus"/>
        <result column="total_amount" property="totalAmount"/>
        <result column="pay_type" property="payType"/>
        <result column="pay_url" property="payUrl"/>
        <result column="pay_amount" property="payAmount"/>
        <result column="transaction_id" property="transactionId"/>
        <result column="pay_status" property="payStatus"/>
        <result column="pay_time" property="payTime"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <select id="queryUnpaidOrder" parameterType="com.kojikoji.gpt.data.infrastructure.po.OrderPO" resultMap="orderMap">
        select order_id, product_name, pay_url, pay_status, total_amount
        from
            gpt_order
        where
            openid = #{openid} and product_id = #{productId} and order_status = 0
        order by id desc
        limit 1
    </select>
    

    <!-- saveOrder -->
    <insert id="saveOrder" parameterType="com.kojikoji.gpt.data.infrastructure.po.OrderPO">
        insert into gpt_order(
            openid, product_id, product_name, product_quota, order_id,
            order_time, order_status, total_amount, pay_type, pay_status,
            pay_time, create_time, update_time
        ) VALUES(
            #{openid}, #{productId}, #{productName}, #{productQuota}, #{orderId},
            #{orderTime}, #{orderStatus}, #{totalAmount}, #{payType}, #{payStatus},
            #{payTime}, now(), now()
        )
    </insert>

    <update id="updateOrderPayInfo" parameterType="com.kojikoji.gpt.data.infrastructure.po.OrderPO">
        update gpt_order
        set
            pay_url = #{payUrl},
            pay_status = #{payStatus},
            update_time = now()
        where
            openid = #{openid} and order_id = #{orderId}
    </update>

    <update id="changeOrderPaySuccess" parameterType="com.kojikoji.gpt.data.infrastructure.po.OrderPO">
        update gpt_order
        set
            pay_status = #{payStatus},
            transaction_id = #{transactionId},
            pay_amount = #{payAmount},
            pay_time = #{payTime}
        where
            order_id = #{orderId}
    </update>

    <select id="queryOrder" parameterType="java.lang.String" resultMap="orderMap">
        select id, openid, product_id, product_name, product_quota, order_id, order_time, order_status
            total_amount, pay_type, pay_url, pay_amount, transaction_id, pay_status, pay_time, create_time, update_time
        from gpt_order
        where order_id = #{orderId}
    </select>

    <update id="changeOrderDeliverStatus" parameterType="java.lang.String">
        update gpt_order
        set
            order_status = 2
        where order_id = #{orderId}
    </update>

    <select id="queryTimeoutCloseOrderList" resultType="java.lang.String">
        select order_id as orderId
        from gpt_order
        where
            order_status = 0 and pay_status = 0
        and
            now() >= order_time + INTERVAL 30 MINUTE
        order by id asc
        limit 50
    </select>

    <update id="changeOrderClose" parameterType="java.lang.String">
        update gpt_order
        set
            order_status = 3, pay_status = 3,
            update_time = now()
        where
            order_id=#{orderId} and pay_status = 0;
    </update>

    <select id="queryReplenishmentOrder" resultType="java.lang.String">
        select order_id as orderId
        from gpt_order
        where
            order_status = 1 and pay_status = 1
          and
            now() >= order_time + INTERVAL 3 MINUTE
        order by id asc
            limit 50
    </select>
</mapper>
